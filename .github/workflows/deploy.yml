name: Secure Production Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:6-alpine
        ports: [6379:6379]
      rabbitmq:
        image: rabbitmq:3.9-management-alpine
        ports: [5672:5672]
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci
      - run: npm test
        env:
          DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
          JWT_SECRET: ${{ vars.JWT }}
          SECRET: ${{ vars.SECRET }}
          NODE_ENV: test

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ secrets.AWS_SSH_KEY }}" | ssh-add -
          mkdir -p ~/.ssh
          ssh-keyscan -t rsa ${{ secrets.AWS_EC2_IP }} >> ~/.ssh/known_hosts

      - name: Deploy Application
        run: |
          ssh -T -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.AWS_EC2_IP }} << 'DEPLOY'
            set -e
            cd /home/ec2-user
            rm -rf YPClub-backend
            git clone https://github.com/your-org/YPClub-backend.git
            cd YPClub-backend

            # Load production environment variables
            echo "DATABASE_PASSWORD=$DATABASE_PASSWORD" > .env.production
            echo "JWT_SECRET=$JWT_SECRET" >> .env.production
            echo "SECRET=$SECRET" >> .env.production

            docker-compose down --remove-orphans
            docker-compose up --build -d

            # Health check
            sleep 10
            curl --fail http://localhost:3001/health
          DEPLOY
        env:
          DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
          JWT_SECRET: ${{ vars.JWT }}
          SECRET: ${{ vars.SECRET }}