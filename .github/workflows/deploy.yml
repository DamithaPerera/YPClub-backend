name: CI/CD Pipeline - Deploy Node.js + Redis + RabbitMQ

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test
        env:
          DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
          JWT_SECRET: ${{ vars.JWT }}
          SECRET: ${{ vars.SECRET }}
          PORT: 3001
          RABBITMQ_HOST: localhost

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.AWS_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy via SSH
        run: |
          echo "Connecting to EC2..."
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.SSH_USER }}@${{ secrets.AWS_EC2_IP }} << 'EOF'
            echo "Connected to EC2"
            cd /home/ec2-user
            echo "Removing old project..."
            rm -rf YPClub-backend
            echo "Cloning latest repo..."
            git clone https://github.com/your-github-user/YPClub-backend.git
            cd YPClub-backend
            echo "Shutting down old containers..."
            docker-compose down
            echo "Starting new containers..."
            docker-compose up --build -d
            echo "Deployment complete!"
          EOF
