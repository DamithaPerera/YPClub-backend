name: CI/CD Pipeline - Deploy Node.js + Redis + RabbitMQ

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:latest
        ports: [6379:6379]
      rabbitmq:
        image: rabbitmq:3-management
        ports: [5672:5672, 15672:15672]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with: { node-version: '18' }
      - run: npm install
      - run: npm test
        env:
          DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
          JWT_SECRET: ${{ vars.JWT }}
          SECRET: ${{ vars.SECRET }}
          PORT: 3001
          RABBITMQ_HOST: localhost

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" | sed 's/\\n/\n/g' > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan ${{ secrets.AWS_EC2_IP }} >> ~/.ssh/known_hosts
          ls -la ~/.ssh # Debug SSH setup

      - name: Deploy via SSH
        run: |
          ssh -i ~/.ssh/deploy_key \
              -o StrictHostKeyChecking=no \
              ${{ secrets.SSH_USER }}@${{ secrets.AWS_EC2_IP }} \
              "cd /home/ec2-user && \
              rm -rf YPClub-backend && \
              git clone https://github.com/your-github-user/YPClub-backend.git && \
              cd YPClub-backend && \
              docker-compose down && \
              docker-compose up --build -d"